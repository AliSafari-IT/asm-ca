"use strict";(self.webpackChunktechdocs=self.webpackChunktechdocs||[]).push([[1860],{8962:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"outlines/devtools/dataformats/json/json-overview/Schema-Driven-Development","title":"Schema-Driven Development","description":"The basic use of JSON-Schema is to generate clear, human/machine readable documentation. Moreover, JSON-Schema can be a great tool for data modeling, even more efficient as a data modeling tool to that of a validation tool. Meaning that its inability to validate a value based on another value, keeps its validation feature at a basic level for development. For example, to say that the value of ageOne is less than the value of ageTwo, JSON-Schema is unable to validate that and the most it can do for us is that these are both numbers.","source":"@site/docs/outlines/015-devtools/02-dataformats/001-json/json-overview/03-Schema-Driven-Development.md","sourceDirName":"outlines/015-devtools/02-dataformats/001-json/json-overview","slug":"/outlines/devtools/dataformats/json/json-overview/sch-dev","permalink":"/docs/outlines/devtools/dataformats/json/json-overview/sch-dev","draft":false,"unlisted":false,"editUrl":"https://github.com/AliSafari-IT/asafarim/edit/main/techdocs/docs/outlines/015-devtools/02-dataformats/001-json/json-overview/03-Schema-Driven-Development.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"slug":"sch-dev"},"sidebar":"tutorialSidebar","previous":{"title":"Json: Schema","permalink":"/docs/json-schema"},"next":{"title":"How to use JSON","permalink":"/docs/how-to-use/json-in-ts"}}');var n=o(6870),s=o(5569);const i={sidebar_position:3,slug:"sch-dev"},r="Schema-Driven Development",l={},c=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"schema-driven-development",children:"Schema-Driven Development"})}),"\n",(0,n.jsxs)(t.p,{children:["The basic use of ",(0,n.jsx)(t.code,{children:"JSON-Schema"})," is to generate clear, human/machine readable documentation. Moreover, JSON-Schema can be a great tool for data modeling, even more efficient as a data modeling tool to that of a validation tool. Meaning that its inability to validate a value based on another value, keeps its validation feature at a basic level for development. For example, to say that the value of ",(0,n.jsx)(t.code,{children:"ageOne"})," is less than the value of ",(0,n.jsx)(t.code,{children:"ageTwo"}),", JSON-Schema is unable to validate that and the most it can do for us is that these are both numbers."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},5569:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>r});var a=o(6326);const n={},s=a.createContext(n);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);